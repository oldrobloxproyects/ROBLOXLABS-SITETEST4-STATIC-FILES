!function(){var i={965:function(t,e,i){var n={"./notificationIndicatorDirective.js":3723,"./notificationStreamIconDirective.js":332,"./notificationStreamIndicatorDirective.js":9935};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=965},6408:function(t,e,i){var n={"./abbreviateCountFilter.js":4991};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=6408},2594:function(t,e,i){var n={"./directives/templates/notificationIndicator.html":5198,"./directives/templates/notificationStreamIcon.html":3004,"./directives/templates/notificationStreamIndicator.html":3531};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=2594},8652:function(t,e,i){var n={"./gameUpdatesConstants.js":3793,"./signalR.js":330};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=8652},4903:function(t,e,i){var n={"./notificationStreamController.js":1042,"./notificationsController.js":8431};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=4903},3702:function(t,e,i){var n={"./clickInCardDirective.js":7141,"./developerMetricsAvailableDirective.js":2814,"./friendRequestDirective.js":9912,"./gameUpdateDirective.js":8331,"./lazyLoadingDirective.js":8295,"./notificationCardDirective.js":1354,"./notificationContentDirective.js":3828,"./notificationContentViewDirective.js":2422,"./notificationStreamBaseDirective.js":1695,"./notificationStreamBaseViewDirective.js":1840,"./notificationStreamBodyDirective.js":6359,"./notificationStreamContainerDirective.js":1413,"./privateMessageDirective.js":1978,"./testDirective.js":3587};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=3702},3748:function(t,e,i){var n={"./sortGameUpdatesFilter.js":7554,"./sortNotificationsByEventDateDesc.js":4779};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=3748},3545:function(t,e,i){var n={"./gameUpdatesService.js":4403,"./gameUpdatesUtility.js":158,"./layoutLibraryI18nService.js":5978,"./notificationStreamService.js":9822,"./notificationStreamUtility.js":167};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=3545},6012:function(t,e,i){var n={"./directives/templates/developerMetricsAvailable.html":177,"./directives/templates/friendRequest.html":6610,"./directives/templates/gameUpdateActionPopoverTemplate.html":4970,"./directives/templates/gameUpdateTemplate.html":5931,"./directives/templates/notificationContent.html":2008,"./directives/templates/notificationContentViewTemplate.html":6763,"./directives/templates/notificationStreamBaseView.html":643,"./directives/templates/notificationStreamContainer.html":5091,"./directives/templates/privateMessage.html":9488,"./directives/templates/test.html":5980};function a(t){t=o(t);return i(t)}function o(t){if(i.o(n,t))return n[t];t=new Error("Cannot find module '"+t+"'");throw t.code="MODULE_NOT_FOUND",t}a.keys=function(){return Object.keys(n)},a.resolve=o,(t.exports=a).id=6012},726:function(t){function o(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function r(t){return t.split("/").pop().replace(".html","")}var e={importFilesUnderPath:function(t){t.keys().forEach(t)},templateCacheGenerator:function(t,e,n,a){return t.module(e,[]).run(["$templateCache",function(i){n&&n.keys().forEach(function(t){var e=o(r(t));i.put(e,n(t))}),a&&a.keys().forEach(function(t){var e=o(r(t));i.put(e,a(t).replace(/<\/?script[^>]*>/gi,""))})}])}};t.exports=e},3723:function(t,e,i){"use strict";i.r(e);i=i(8923);function n(t,e,n){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationIndicatorTemplate,link:function(i){e.bind("Roblox.NotificationStream.UnreadNotifications",function(t,e){n.debug(" ----- notificationStreamIconController --- args.count --------"+e.count),i.$evalAsync((e=e,i.layout=i.layout||{},i.layout.unreadNotifications=e.count,void(i.layout.isNotificationContentOpen=e.isNotificationContentOpen)))})}}}n.$inject=["notificationStreamUtility","$document","$log"],i.Z.directive("notificationIndicator",n),e.default=n},332:function(t,e,i){"use strict";i.r(e);i=i(8923);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationStreamIconTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamIcon",n),e.default=n},9935:function(t,e,i){"use strict";i.r(e);i=i(8923);function n(t,e,a,o){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationStreamIndicatorTemplate,link:function(i){function n(t){i.layout.unreadNotifications=t.count,i.layout.isNotificationContentOpen=t.isNotificationContentOpen}i.layout=i.layout||{},i.getUnreadNotificationCount=function(){o.unreadCount().then(function(t){t&&(t=t.unreadNotifications,i.layout.unreadNotifications=t)},function(){a.debug("--- unreadCount call failed from notificationStreamIndicatorDirective----- ")}).catch(function(t){a.error(t)})},e.bind("Roblox.NotificationStream.UnreadNotifications",function(t,e){a.debug(" ----- notificationStreamIconController --- args.count --------".concat(e.count)),i.$evalAsync(n(e))}),e.bind("Roblox.NotificationStream.ClearUnreadNotifications",function(){0<i.layout.unreadNotifications&&(n({count:0,isNotificationContentOpen:!0}),o.clearUnread().then(function(){i.layout.unreadNotifications=0}))}),i.layout&&i.layout.isNotificationContentOpen||i.getUnreadNotificationCount()}}}n.$inject=["notificationStreamUtility","$document","$log","notificationStreamService"],i.Z.directive("notificationStreamIndicator",n),e.default=n},4991:function(t,e,i){"use strict";function n(){var n={100:"99+",1e3:"1K+"};return function(t,e,i){return e=e||100,i=i||n[e],e<=t?i:t}}i.r(e),i(8923).Z.filter("abbreivateCount",n),e.default=n},8923:function(t,e,i){"use strict";var n=i(5734),n=i.n(n)().module("notificationStreamIcon",["robloxApp","notificationStream","notificationStreamIconHtmlTemplate"]);e.Z=n},3793:function(t,e,i){"use strict";i.r(e);var n=i(792),a={endpoints:{getInteractedEndpoint:function(){return{url:n.EnvironmentUrls.notificationApi+"/v2/stream-notifications/game-update-notification-interacted",retryable:!1,withCredentials:!0}},getReadEndpoint:function(){return{url:n.EnvironmentUrls.notificationApi+"/v2/stream-notifications/game-update-notification-read",retryable:!1,withCredentials:!0}},getGameFollowingsEndpoint:function(t){return{url:n.EnvironmentUrls.followingsApi+"/v1/users/"+t+"/universes",retryable:!0,withCredentials:!0}},getFollowGameEndpoint:function(t,e){return{url:n.EnvironmentUrls.followingsApi+"/v1/users/"+t+"/universes/"+e,retryable:!1,withCredentials:!0}},getGameDetailsEndpoint:function(){return{url:n.EnvironmentUrls.gamesApi+"/v1/games/multiget-place-details",retryable:!0,withCredentials:!0}},getGameIconsEndpoint:function(){return{url:n.EnvironmentUrls.thumbnailsApi+"/v1/games/icons",retryable:!0,withCredentials:!0}},getGameIconsLegacyEndpoint:function(){return{url:n.EnvironmentUrls.gamesApi+"/v1/games/game-thumbnails",retryable:!0,withCredentials:!0}},getGameUpdatesEndpoint:function(){return{url:n.EnvironmentUrls.notificationApi+"/v2/stream-notifications/get-latest-game-updates",retryable:!0,withCredentials:!0}},getAbuseReportUrl:function(t,e,i){return n.EnvironmentUrls.websiteUrl+"/abusereport/gameupdate?id="+t+"&redirectUrl="+i}},apiParams:{gameUpdateBatchSize:100,placeDetailBatchSize:100,gameIconBatchSize:100,gameIconSize:"150x150",gameIconFormat:"png",gameIconWidth:150,gameIconHeight:150},gameNameMaxLength:30,gameUpdateInteractions:{played:"Played",seen:"Seen",unfollowed:"Unfollowed"}};i(8119).Z.constant("gameUpdatesConstants",a),e.default=a},330:function(t,e,i){"use strict";i.r(e);var n={notifications:{NotificationStream:"NotificationStream",ChatPrivacySettingNotifications:"ChatPrivacySettingNotifications"},types:{NewNotification:"NewNotification",NotificationsRead:"NotificationsRead",NotificationMarkedInteracted:"NotificationMarkedInteracted",NotificationRevoked:"NotificationRevoked",chatEnabled:"ChatEnabled",chatDisabled:"ChatDisabled"}};i(8119).Z.constant("signalR",n),e.default=n},1042:function(t,e,i){"use strict";i.r(e);var u=i(792),n=i(5734),f=i.n(n),i=i(8119);function a(a,e,t,i,o,n,r,c,s,l,d){a.buildNotificationsList=function(t){var n=[];t.forEach(function(t){var e=t.metadataCollection,i=t.notificationSourceType;o.isNotificationTypeValid(i)&&(o.isGameUpdateNotification(i)||e.forEach(function(t){var e=o.normalizeUser(i,t);if(e&&null!=e.userId&&null!=e.userName){t=e.userId,e=e.userName;if(-1<a.library.userIdList.indexOf(t))return!1;n.push(t),a.library.userIdList.push(t),a.library.userLibrary[t]={id:t,name:e,profileLink:o.getAbsoluteUrl(o.links.profileLink,{id:t})}}}),t.isClickable=o.isCardClickable(t),a.notificationIds.indexOf(t.id)<0&&a.notificationIds.push(t.id),a.notifications[t.id]=t)}),a.layout.emptyNotificationEnabled=0===a.notificationIds.length},a.buildGameUpdateNotifications=function(i){var n;i&&0!==i.length&&(n=a.library.gameUpdateModels,c.getGameFollowingsForUserAsync(a.library.currentUserId).then(function(t){for(var e=[],i=0;i<t.length;i++)e.push(t[i].universeId);return s.getGameUpdatesAsync(e,n)}).then(function(t){var e=s.aggregateGameUpdateNotifications(i,n);e&&(a.notifications[e.id]=e,a.notificationIds.unshift(e.id),s.fillGameDetails(n),1===e.metadataCollection.length&&(e=n[e.metadataCollection[0].UniverseId],c.markGameUpdateInteractedAsync(e.universeId,e.createdOnKey,l.gameUpdateInteractions.seen,a.library.currentUserId)))}))},a.getRecentNotifications=function(){a.layout.getRecentDataInitialized=!1,i.getRecentNotifications(a.notificationApiParams.startIndexOfNotifications,a.notificationApiParams.pageSizeOfNotifications).then(function(t){var e=[],i=[];a.layout.getRecentDataInitialized=!0,a.layout.isGetRecentDataLoadedRequested=!1,t&&0<t.length&&(f().forEach(t,function(t){(o.isGameUpdateNotification(t.notificationSourceType)?e:i).push(t)}),a.buildNotificationsList(i),0<e.length&&a.buildGameUpdateNotifications(e),a.layout.isLazyLoadingRequested=!0,t.length===a.notificationApiParams.pageSizeOfNotifications&&(a.notificationApiParams.startIndexOfNotifications=a.notificationApiParams.startIndexOfNotifications+a.notificationApiParams.pageSizeOfNotifications,a.notificationApiParams.loadMoreNotifications=!0))},function(){d.debug("--- getRecentNotifications call failed ----- "),a.layout.getRecentDataInitialized=!0})},a.clearUnreadNotifications=function(){0<a.library.unreadNotifications&&(a.library.unreadNotifications=0,e.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:0,isNotificationContentOpen:a.layout.isNotificationContentOpen}))},a.openNotificationStream=function(){a.layout.isGetRecentDataLoadedRequested&&(a.resetNotificationStreamData(),a.getRecentNotifications()),e.triggerHandler("Roblox.NotificationStream.ClearUnreadNotifications",{}),a.clearUnreadNotifications()},a.toggleNotificationContent=function(t){t?a.layout.isNotificationContentOpen=!1:(a.library.inApp||(a.layout.isNotificationContentOpen=!a.layout.isNotificationContentOpen),a.layout.isNotificationContentOpen&&a.layout.isGetRecentDataLoadedRequested&&a.openNotificationStream()),a.layout.isNotificationContentOpen&&a.layout.bannerEnabled&&(a.layout.bannerEnabled=!1),a.layout.isLazyLoadingRequested&&(a.layout.isLazyLoadingRequested=!1)},a.getUnreadNotificationCount=function(){i.unreadCount().then(function(t){t&&(a.library.unreadNotifications=t.unreadNotifications,a.layout.isNotificationContentOpen?a.layout.bannerText=o.textTemplate.newNotification(a.library.unreadNotifications):e.triggerHandler("Roblox.NotificationStream.UnreadNotifications",{count:t.unreadNotifications,isNotificationContentOpen:a.layout.isNotificationContentOpen}))},function(){d.debug("--- unreadCount call failed ----- ")})},a.resetNotificationStreamData=function(){a.notificationIds=[],a.notifications={},a.notificationApiParams&&(a.notificationApiParams.startIndexOfNotifications=0)},a.reloadNotificationStreamData=function(){a.resetNotificationStreamData(),e.triggerHandler("Roblox.NotificationStream.ClearUnreadNotifications",{}),a.getRecentNotifications(),a.layout.bannerEnabled=!1},a.updateNewNotificationInfo=function(){a.layout.isGetRecentDataLoadedRequested=!0,a.getUnreadNotificationCount(),a.layout.isNotificationContentOpen&&a.$evalAsync(function(){a.layout.bannerEnabled=!0})},a.updateSettingsInLibrary=function(t){a.library.bannerDismissTimeSpan=t.bannerDismissTimeSpan,a.library.signalRDisconnectionResponseInMilliseconds=t.signalRDisconnectionResponseInMilliseconds,a.library.eventStreamMetaData={userId:a.library.currentUserId,inApp:a.library.inApp},a.library.canLaunchGameFromGameUpdate=t.canLaunchGameFromGameUpdate},a.handleSignalRSuccess=function(){a.$evalAsync(function(){a.layout.errorBannerEnabled=!1})},a.handleSignalRError=function(){t(function(){a.layout.errorBannerEnabled=!0,a.layout.errorText=o.textTemplate.noNetworkConnectionText()},a.library.signalRDisconnectionResponseInMilliseconds)},a.handleNotificationStreamNotification=function(t){switch(d.debug("--------- this is NotificationStream subscription -----------".concat(t.Type)),t.Type){case o.signalRType.NewNotification:a.updateNewNotificationInfo();break;case o.signalRType.NotificationsRead:a.clearUnreadNotifications();break;case o.signalRType.NotificationRevoked:a.getUnreadNotificationCount(),a.layout.isStreamBodyInteracted||a.reloadNotificationStreamData()}},a.handleChatPrivacySettingNotification=function(e){d.debug("--------- this is ChatPrivacySettingNotifications subscription -----------".concat(e.Type));try{switch(e.Type){case o.signalRType.chatEnabled:a.library.isChatDisabledByPrivacySetting=!1;break;case o.signalRType.chatDisabled:a.library.isChatDisabledByPrivacySetting=!0}}catch(t){var i="ChatPrivacySettingNotifications:".concat(e.Type,": ");t&&t.message&&(i+=t.message),d.debug(i)}},a.getChatPrivacySetting=function(){i.getChatPrivacySettings().then(function(t){a.library.isChatDisabledByPrivacySetting=t&&!t.chatEnabled},function(t){d.debug(t)})},a.closeErrorBanner=function(){a.layout.errorBannerEnabled=!1,a.layout.errorText=""},a.closeBanner=function(){a.layout.bannerEnabled=!1,a.layout.bannerText=""},a.initializeRealTimeSubscriptions=function(){var t;f().isDefined(u.RealTime)&&((t=u.RealTime.Factory.GetClient()).SubscribeToConnectionEvents(a.handleSignalRSuccess,a.handleSignalRSuccess,a.handleSignalRError,o.notificationsName.NotificationStream),t.Subscribe(o.notificationsName.NotificationStream,a.handleNotificationStreamNotification),t.Subscribe(o.notificationsName.ChatPrivacySettingNotifications,a.handleChatPrivacySettingNotification))},a.getUnreadNotificationCountFromDom=function(){var t=f().element(".notification-stream-icon .notification-red");t&&!Number.isNaN(t)&&(a.library.unreadNotifications=parseInt(t.html(),10))},a.initializeNotificationStream=function(){var t;!function(){try{a.library=a.library||o.library,a.resetNotificationStreamData(),a.getChatPrivacySetting(),i.initialize().then(function(t){t&&(o.layout.pageDataInitialized=!0,a.updateSettingsInLibrary(t))},function(){d.debug("----- initialize data request failed ----")})}catch(t){var e="initializePageData:";t&&t.message&&(e+=t.message),d.debug(e)}}(),a.layout=f().copy(o.layout),a.notificationApiParams=f().copy(o.notificationApiParams),a.library.inApp?(a.getUnreadNotificationCount(),a.layout.isNotificationContentOpen=!0):a.getUnreadNotificationCountFromDom(),a.layout.isNotificationContentOpen||((t=f().copy(a.library.eventStreamMetaData)).countOfUnreadNotification=a.library.unreadNotifications,r.sendEventWithTarget(r.eventNames.notificationStream.openContent,"click",t)),a.toggleNotificationContent(),a.initializeRealTimeSubscriptions()},a.initializeNotificationStream()}a.$inject=["$scope","$document","$timeout","notificationStreamService","notificationStreamUtility","userService","eventStreamService","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","$log"],i.Z.controller("notificationStreamController",a),e.default=a},8431:function(t,e,i){"use strict";i.r(e);var n=i(5734),p=i.n(n),i=i(8119);function a(o,a,r,c,s,l,d,n,u){function f(t,e,i){var n=o.notifications[e],e=p().copy(o.library.eventStreamMetaData);e.notificationType=n.notificationSourceType,s.sendEventWithTarget(t,i,e)}var e;o.parseErrorFromApiResponse=function(t){return t&&t.errors&&t.errors[0]},o.acceptFriend=function(t,e,i){u.debug("---------------- acceptFriend --------- ");var n=o.notifications[e];o.interactNotification(n),a.acceptFriendV2(t).then(function(t){o.onAcceptFriendSuccess(e,i)},function(t){t=o.parseErrorFromApiResponse(t);t&&t.userFacingMessage&&(o.layout.errorText=t.userFacingMessage,o.layout.errorBannerEnabled=!0)})},o.onAcceptFriendSuccess=function(t,e){var i=o.notifications[t];i.friendRequestActionType=r.friendRequestActionType.chatBtn,i.metadataCollection[0].IsAccepted=!0,i.isFlipped=!0,n.triggerHandler("Roblox.Friends.CountChanged"),f(s.eventNames.notificationStream.acceptFriendRequest,t,e.type)},o.ignoreFriend=function(t,e,i){u.debug("---------------- ignoreFriend --------- ");var n=o.notifications[e];o.interactNotification(n),a.ignoreFriendV2(t).then(function(t){o.onIgnoreFriend(e,i)},function(t){o.onIgnoreFriend(e,i)})},o.onIgnoreFriend=function(t,e){o.notifications[t].isSlideOut=!0,f(s.eventNames.notificationStream.ignoreFriendRequest,t,e.type)},o.removeNotification=function(t){u.debug("---------------- removeNotification --------- notificationId:  "+t);var e=o.notificationIds.indexOf(t);o.notificationIds.splice(e,1),delete o.notifications[t]},o.chat=function(t,e,i){var n;o.library.isChatDisabledByPrivacySetting||(n=o.notifications[e],o.interactNotification(n),(n=d.buildPermissionVerifier(o.library)).uwpApp.hybridRequired=!0,d.startChat(t,n),f(s.eventNames.notificationStream.chat,e,i.type))},o.interactNotification=function(t){t.isInteracted||a.markInteracted(t.id).then(function(){t.isInteracted=!0})},o.clickCard=function(t){var e,i,n="",a={};switch(t.notificationSourceType){case r.notificationSourceType.friendRequestReceived:o.interactNotification(t),1<t.eventCount||0===t.metadataCollection.length?(n=r.links.friendRequestLink,o.library.inApp?(a={feature:r.links.friendRequestTabName,urlPath:n},c.navigateToFeature(a,function(t){u.debug("openUserFriendsPage ---- status:"+t)})):window.location.href=l.getAbsoluteUrl(n)):t.metadataCollection&&0<t.metadataCollection.length&&(i=t.metadataCollection[0],n=r.links.profileLink,e=i.SenderUserId,o.library.inApp?c.openUserProfile(parseInt(e),function(t){u.debug("openUserProfile ---- status:"+t)}):window.location.href=r.getAbsoluteUrl(n,{id:e}));break;case r.notificationSourceType.friendRequestAccepted:o.interactNotification(t),n=r.links.friendsLink,o.library.inApp?(a={feature:r.links.friendsTabName,urlPath:n},c.navigateToFeature(a,function(t){u.debug("openUserFriendsPage ---- status:"+t)})):window.location.href=l.getAbsoluteUrl(n);break;case r.notificationSourceType.privateMessageReceived:o.interactNotification(t),1<t.eventCount||0===t.metadataCollection.length?n=r.links.inboxLink:t.metadataCollection&&0<t.metadataCollection.length&&(i=t.metadataCollection[0],n=r.links.inboxLink+r.links.inboxMessageDetailQuery+i.MessageId),o.library.inApp?(a={feature:r.links.inboxTabName,urlPath:n},c.navigateToFeature(a,function(t){u.debug("openUserProfile ---- status:"+t)})):window.location.href=l.getAbsoluteUrl(n);break;case r.notificationSourceType.developerMetricsAvailable:o.interactNotification(t)}},o.notificationSourceType=r.notificationSourceType,o.contentViewManager=(e={},{addContentView:function(t){e[t.viewId]=t},selectContentView:function(t){t=e[t];t&&(p().forEach(e,function(t){t.isActive=!1}),t.isActive=!0)}}),n.bind("Roblox.Popover.Status",function(t,e){u.debug("notificationsController"),e.isOpen||o.contentViewManager.selectContentView(o.library.notificationContentViews.main)})}a.$inject=["$scope","notificationStreamService","notificationStreamUtility","hybridService","eventStreamService","urlService","chatDispatchService","$document","$log"],i.Z.controller("notificationsController",a),e.default=a},7141:function(t,e,i){"use strict";i.r(e);var n=i(5734),u=i.n(n),i=i(8119);function a(c,s,l,d){return{restrict:"A",scope:!0,link:function(r,t){t.bind("click",function(t){if(!t.target)return!1;var e=u().element(t.target),i=e.attr("type");if(t.target&&i){var n=u().copy(r.library.eventStreamMetaData);r.notification&&(n.notificationType=r.notification.notificationSourceType,r.interactNotification(r.notification));var a=c.eventNames.notificationStream[i];if(c.sendEventWithTarget(a,t.type,n),r.library.inApp){switch(t.stopPropagation(),t.preventDefault(),i){case l.links.settingLinkName:var o={feature:l.links.settingTabName,urlPath:l.links.settingLink};s.navigateToFeature(o,function(t){d.debug("navigateToFeature ---- status:"+t)});break;case l.links.friendRequestLinkName:o={feature:l.links.friendRequestTabName,urlPath:l.links.friendRequestLink};s.navigateToFeature(o,function(t){d.debug("openUserProfile ---- status:"+t)});break;case l.links.profileLinkName:o=e.attr("href")&&e.attr("href").match(/users\/(\d+)/,"")?e.attr("href").match(/users\/(\d+)/,"")[1]:r.userIds[0];s.openUserProfile(parseInt(o),function(t){d.debug("openUserProfile ---- status:"+t)})}return!1}}})}}}a.$inject=["eventStreamService","hybridService","notificationStreamUtility","$log"],i.Z.directive("clickInCard",a),e.default=a},2814:function(t,e,i){"use strict";i.r(e);var c=i(792),i=i(8119);function n(n,a,o,r,t){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:o.templates.developerMetricsAvailableTemplate,link:function(i){!function(){i.notificationSourceType=o.notificationSourceType,i.developerMetricsAvailableLayout={month:"",year:"",universeId:-1,gameName:"",gameNameLinked:"",rootPlaceId:-1,gameLinkUrl:null,gameIconUrl:null};var e,t=i.notification.metadataCollection;t&&0<t.length&&(e=t[0],t=r.getAbsoluteUrl("/places/"+e.rootPlaceId+"/stats"),i.developerMetricsAvailableLayout.month=function(t){for(var e=(new c.Intl).getMonthsList("long"),i=0,n=e.length;i<n;i++)if(e[i].value===t)return e[i].name;return""}(e.month),i.developerMetricsAvailableLayout.year=e.year,i.developerMetricsAvailableLayout.universeId=e.universeId,i.developerMetricsAvailableLayout.gameName=e.gameName,i.developerMetricsAvailableLayout.gameNameLinked='<a class="text-name font-caption-header" href="'+t+'">'+e.gameName+"</a>",i.developerMetricsAvailableLayout.rootPlaceId=e.rootPlaceId,i.developerMetricsAvailableLayout.gameLinkUrl=t,a.multiGetGameIconsAsync([e.universeId]).then(function(t){t&&t.hasOwnProperty(e.universeId)&&(i.developerMetricsAvailableLayout.gameIconUrl=t[e.universeId])}),i.viewButtonHandler=function(){n.location.href=i.developerMetricsAvailableLayout.gameLinkUrl})}()}}}n.$inject=["$window","gameUpdatesService","notificationStreamUtility","urlService","$log"],i.Z.directive("developerMetricsAvailable",n),e.default=n},9912:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(u,t,n){return{restrict:"A",replace:!0,scope:{notification:"=",library:"=",appMeta:"=",acceptFriend:"&",ignoreFriend:"&",chat:"&",interactNotification:"&"},templateUrl:u.templates.friendRequestTemplate,link:function(r){r.notificationSourceType=u.notificationSourceType,r.friendRequestLink=u.layout.friendRequestLink;var t,e=r.notification.metadataCollection,c=r.notification.notificationSourceType,i=e.length,s=r.notification.eventCount||i,l="",d="";r.userIds=[],r.notificationDisplayText="",e.forEach(function(t,e){var i=u.normalizeUser(c,t),n=i.userId,a=i.userName,o=i.displayName,t=r.library.userLibrary[n]&&r.library.userLibrary[n].profileLink?r.library.userLibrary[n].profileLink:u.getAbsoluteUrl(u.links.profileLink,{id:n});r.userIds.indexOf(n)<0&&r.userIds.push(n);i=u.getUserHtmlTemplate(c,s),t=u.getFormatString(i,{userId:n,userName:a,displayName:o,profileLink:t});e<1?l+=t:e<2&&(d+=t,2<s?0:2===s&&0)}),0===i?r.notificationDisplayText=u.normalizeYouHaveText(c,s):2<s||i<s?(t=2<i?s-2:s-i,r.notificationDisplayText=u.normalizeMultipleDisplayText(c,l,d,t),r.requestConfirmedText=u.normalizeMultipleConfirmedText(c,l,d,t)):2===s?(r.notificationDisplayText=u.normalizeDoubleDisplayText(c,l,d),r.requestConfirmedText=u.normalizeDoubleConfirmedText(c,l,d)):(r.notificationDisplayText=u.normalizeSingleDisplayText(c,l),r.requestConfirmedText=u.normalizeSingleConfirmedText(c,l)),r.friendRequestActionType=u.friendRequestActionType,r.notification.notificationSourceType===u.notificationSourceType.friendRequestReceived?1!==i||1!==s||e[0].IsAccepted?1===i&&1===s&&e[0].IsAccepted?r.notification.friendRequestActionType=u.friendRequestActionType.chatBtn:r.notification.friendRequestActionType=u.friendRequestActionType.viewAllBtn:r.notification.friendRequestActionType=e[0].IsAccepted?u.friendRequestActionType.chatBtn:u.friendRequestActionType.acceptIgnoreBtns:r.notification.notificationSourceType===u.notificationSourceType.friendRequestAccepted&&1===i&&1===s&&(r.notification.friendRequestActionType=u.friendRequestActionType.chatBtn),r.thumbnailTypes=n.thumbnailTypes}}}n.$inject=["notificationStreamUtility","$log","thumbnailConstants"],i.Z.directive("friendRequest",n),e.default=n},8331:function(t,e,i){"use strict";i.r(e);var d=i(792),n=i(5734),u=i.n(n),i=i(8119);function a(a,o,r,t,c,s,e){var l=t.gameUpdateInteractions;return{restrict:"A",replace:!0,templateUrl:c.templates.gameUpdateTemplate,scope:{library:"=",appMeta:"=",contentViewManager:"=",notification:"=?",gameUpdateModel:"=?"},link:function(e,t){var i,n=$(t);if(!e.gameUpdateModel){if(!e.notification)return;if((i=e.notification.metadataCollection)&&0<i.length&&(e.gameUpdateModel=e.library.gameUpdateModels[i[0].UniverseId]),!e.gameUpdateModel)return}e.notificationSourceType=c.notificationSourceType,i&&1<i.length&&(e.isAggregated=!0,e.aggregatedDisplayText=r.formatAggregatedDisplayText(i[0].GameName,i[1].GameName,e.notification.eventCount-2)),e.gameNameMaxLength=r.gameNameMaxLength,e.actionMenuTemplate="game-update-action-popover-template",e.isActionMenuOpen=!1,e.goToGameDetails=function(){e.library.inApp?s.navigateToFeature({feature:"GameDetails",urlPath:e.gameUpdateModel.gameLinkUrlForApp}):a.location.href=e.gameUpdateModel.gameLinkUrl},e.playButtonHandler=function(){o.markGameUpdateInteractedAsync(e.gameUpdateModel.universeId,e.gameUpdateModel.createdOnKey,l.played,e.library.currentUserId),e.library.inApp?s.launchGame({placeId:e.gameUpdateModel.rootPlaceId,requestType:"RequestGame",isPartyLeader:!1}):d.GameLauncher.joinMultiplayerGame(e.gameUpdateModel.rootPlaceId,!0,!1)},e.viewGameUpdates=function(){e.contentViewManager.selectContentView(e.library.notificationContentViews.gameUpdates),u().forEach(e.library.gameUpdateModels,function(t){t.seen||o.markGameUpdateInteractedAsync(t.universeId,t.createdOnKey,l.seen,e.library.currentUserId).then(function(){t.seen=!0},function(){})})},e.followGame=function(){o.followGameAsync(e.library.currentUserId,e.gameUpdateModel.universeId).then(function(){n.focus(),e.gameUpdateModel.isUnfollowed=!1,e.gameUpdateModel.updateMessage||r.getGameUpdatesAsync([e.gameUpdateModel.universeId],e.library.gameUpdateModels,null)},function(){})},e.unfollowGame=function(t){t&&t.stopPropagation&&t.stopPropagation(),o.unfollowGameAsync(e.library.currentUserId,e.gameUpdateModel.universeId).then(function(){n.focus(),e.gameUpdateModel.isUnfollowed=!0,e.isActionMenuOpen=!1,o.markGameUpdateInteractedAsync(e.gameUpdateModel.universeId,e.gameUpdateModel.createdOnKey,l.unfollowed,e.library.currentUserId)},function(){})},e.reportAbuse=function(){o.reportAbuse(e.gameUpdateModel.universeId,new Date(e.gameUpdateModel.createdOn))},e.closeActionMenu=function(){e.isActionMenuOpen=!1}}}}a.$inject=["$window","gameUpdatesService","gameUpdatesUtility","gameUpdatesConstants","notificationStreamUtility","hybridService","$log"],i.Z.directive("gameUpdate",a),e.default=a},8295:function(t,e,i){"use strict";i.r(e);var r=i(792),n=i(5734),c=i.n(n),i=i(8119);function a(e,a,o){return{restrict:"A",scope:!0,link:function(i,n){i.callbackLazyLoad=function(){if(!i.notificationApiParams)return!1;i.notificationApiParams.loadMoreNotifications&&(i.layout.notiticationsLazyLoadingEnabled=!0,e.getRecentNotifications(i.notificationApiParams.startIndexOfNotifications,i.notificationApiParams.pageSizeOfNotifications).then(function(t){i.layout.notiticationsLazyLoadingEnabled=!1,t&&0<t.length?(i.buildNotificationsList(t),i.notificationApiParams.startIndexOfNotifications=i.notificationApiParams.startIndexOfNotifications+i.notificationApiParams.pageSizeOfNotifications,t.length<i.notificationApiParams.pageSizeOfNotifications&&(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)):(i.notificationApiParams.loadMoreNotifications=!1,i.notificationApiParams.startIndexOfNotifications=0)},function(){i.layout.notiticationsLazyLoadingEnabled=!1,o.debug("---error from get Notificaitons in lazyLoadingDirective.js---")}))},i.setupScrollbar=function(){n.mCustomScrollbar({autoExpandScrollbar:!1,scrollInertia:5,contentTouchScroll:1,mouseWheel:{preventDefault:!0},callbacks:{onTotalScrollOffset:100,onTotalScroll:i.callbackLazyLoad,onOverflowYNone:i.callbackLazyLoad}})},i.destroyScrollbar=function(){o.debug("----- destroyScrollbar ----"),n.mCustomScrollbar("destroy")};var t=i.$watch(function(){return i.layout&&i.layout.isLazyLoadingRequested},function(t,e){c().isDefined(t)&&t!==e&&(o.debug("----- initializeLayout ----"),t?i.library.inApp?(r.Scrollbar.setUpOverflowY(n,i.callbackLazyLoad),r.Scrollbar.listenToScroll(a,null,i.callbackLazyLoad)):i.setupScrollbar():i.library.inApp||i.destroyScrollbar())},!0);i.$on("$destroy",function(){t&&t()})}}}a.$inject=["notificationStreamService","$document","$log"],i.Z.directive("lazyLoading",a),e.default=a},1354:function(t,e,i){"use strict";i.r(e);var n=i(5734),o=i.n(n),i=i(8119);function a(n,a){var i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"},e=function(){var t,e=document.createElement("supportedEvent");for(t in i)if(o().isDefined(e.style[t]))return i[t]}();return{restrict:"A",link:function(i,t){t.bind(e,function(t){n.debug("got a css transition event",t),0<=t.target.className.search("slide-out-left")&&i.$evalAsync(function(){i.removeNotification(i.notification.id)})}),i.updateNotificationSetting=function(e){a.updateNotificationSettings(i.notification.notificationSourceType,e).then(function(t){n.debug("turnOffNotification -- success",t),i.notification.isTurnOff=!e},function(t){n.debug("turnOffNotification --fail")})}}}}a.$inject=["$log","notificationStreamService"],i.Z.directive("notificationCard",a),e.default=a},3828:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationContentTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationContent",n),e.default=n},2422:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,transclude:!0,templateUrl:t.templates.notificationContentViewTemplate,scope:{library:"=",contentViewManager:"=",viewId:"@",isActive:"=?"},link:function(t){t.contentViewManager.addContentView(t)}}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationContentView",n),e.default=n},1695:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationStreamBaseViewTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamBase",n),e.default=n},1840:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationStreamBaseViewTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamBaseView",n),e.default=n},6359:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,n){return{restrict:"A",replace:!0,scope:!0,link:function(e,i){t.on("click touchstart",function(t){e.layout&&(!e.layout.isStreamBodyInteracted&&0<i.has(t.target).length?e.layout.isStreamBodyInteracted=!0:e.layout.isStreamBodyInteracted&&0<!i.has(t.target).length&&(e.layout.isStreamBodyInteracted=!1),n.debug(" ------------------scope.layout.isStreamBodyInteracted----------------- "+e.layout.isStreamBodyInteracted))})}}}n.$inject=["$document","$log"],i.Z.directive("notificationStreamBody",n),e.default=n},1413:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.notificationStreamContainerTemplate}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("notificationStreamContainer",n),e.default=n},1978:function(t,e,i){"use strict";i.r(e);var n=i(8119),o=i(792);function a(n,t,a){return{restrict:"A",replace:!0,scope:{notification:"=",appMeta:"=",library:"=",interactNotification:"&"},templateUrl:n.templates.privateMessageTemplate,link:function(i){!function(){i.thumbnailTypes=a.thumbnailTypes,i.notificationSourceType=n.notificationSourceType,i.friendRequestLink=n.layout.friendRequestLink,i.privateMessageLayout={displayUserId:null,displayUserName:"",messagePreview:"",isStacked:!1};var t=i.notification.metadataCollection,e=i.notification.notificationSourceType;(1<i.notification.eventCount||t&&0===t.length)&&(i.privateMessageLayout.isStacked=!0),t&&0<t.length&&(e=n.normalizeUser(e,t[0]),i.privateMessageLayout.displayUserId=e.userId,i.privateMessageLayout.displayUserName=o.DisplayNames&&o.DisplayNames.Enabled()?e.displayName:e.userName,i.privateMessageLayout.messagePreview=t[0].BodyPreview)}()}}}a.$inject=["notificationStreamUtility","$log","thumbnailConstants"],n.Z.directive("privateMessage",a),e.default=a},3587:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){return{restrict:"A",replace:!0,scope:!0,templateUrl:t.templates.testTemplate,link:function(e){var t=e.notification.metadataCollection;e.notificationDisplayText="",t.forEach(function(t){e.notificationDisplayText+=t.Detail})}}}n.$inject=["notificationStreamUtility","$log"],i.Z.directive("test",n),e.default=n},7554:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(e){return function(t){return e.sortGameUpdatesByCreatedDate(t,!1)}}n.$inject=["gameUpdatesUtility"],i.Z.filter("sortGameUpdates",n),e.default=n},4779:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(e){return function(t){return e.sortNotificationsByEventDate(t,!1)}}n.$inject=["notificationStreamUtility"],i.Z.filter("sortNotificationsByEventDateDesc",n),e.default=n},8119:function(t,e,i){"use strict";var n=i(792),a=i(5734),a=i.n(a)().module("notificationStream",["robloxApp","ui.bootstrap","notificationStreamHtmlTemplate","thumbnails"]).config(["languageResourceProvider",function(t){var e=(new n.TranslationResourceProvider).getTranslationResource("Notifications.NotificationStream");t.setTranslationResources([e])}]);e.Z=a},4403:function(t,e,i){"use strict";i.r(e);var c=i(792),n=i(5734),d=i.n(n),i=i(8119);function a(s,l,t,i,e,n){var o=e.endpoints,a=e.apiParams;function r(t,e,i,n){for(var a,o=[],r=0,c=e.slice(r,i);0<c.length&&r<e.length;)a=n(c),o.push(s.httpGet(t,a)),r+=i,c=e.slice(r,r+i);return l.all(o)}return{markGameUpdateReadAsync:function(t,e,i){var n=o.getReadEndpoint(),i={universeId:t,createdOn:e.toString(),currentUserId:i};return s.httpPost(n,i)},markGameUpdateInteractedAsync:function(t,e,i,n){var a=o.getInteractedEndpoint(),n={universeId:t,createdOnKey:e,interactionType:i,currentUserId:n};return s.httpPost(a,n)},multiGetPlaceDetailsAsync:function(t){return t&&0!==t.length?(t=t,r(o.getGameDetailsEndpoint(),t,a.placeDetailBatchSize,function(t){return{placeIds:t}}).then(function(t){var e={};return t&&0!==t.length?(d().forEach(t,function(t){t&&d().forEach(t,function(t){e[t.placeId]={universeId:t.universeId,isPlayable:t.isPlayable,imageToken:t.imageToken}})}),e):null})):l(function(t,e){t(null)})},multiGetGameIconsAsync:function(t){return t&&0!==t.length?(t=t,r(o.getGameIconsEndpoint(),t,a.gameIconBatchSize,function(t){return{size:a.gameIconSize,format:a.gameIconFormat,universeIds:t}}).then(function(t){var e={};return t&&0!==t.length?(d().forEach(t,function(t){t&&t.data&&d().forEach(t.data,function(t){e[t.targetId]=t.imageUrl})}),e):null})):l(function(t,e){t(null)})},multiGetGameUpdatesAsync:function(t){return t&&0!==t.length?(t=t,r(o.getGameUpdatesEndpoint(),t,a.gameUpdateBatchSize,function(t){return{universeIds:t}}).then(function(t){var e=[];return t&&0!==t.length?(d().forEach(t,function(t){t&&d().forEach(t,function(t){e.push(t)})}),e):null})):l(function(t,e){t(null)})},getGameFollowingsForUserAsync:function(t){t=o.getGameFollowingsEndpoint(t);return s.httpGet(t,{})},followGameAsync:function(t,e){e=o.getFollowGameEndpoint(t,e);return s.httpPost(e,{})},unfollowGameAsync:function(t,e){e=o.getFollowGameEndpoint(t,e);return s.httpDelete(e,{})},reportAbuse:function(t,e){e=i.getAbsoluteUrl(o.getAbuseReportUrl(t,e,encodeURIComponent(n.location.href)));c.AbuseReportDispatcher?c.AbuseReportDispatcher.triggerUrlAction(e):n.location.href=e}}}a.$inject=["httpService","$q","$log","urlService","gameUpdatesConstants","$window"],i.Z.factory("gameUpdatesService",a),e.default=a},158:function(t,e,i){"use strict";i.r(e);var n=i(5734),u=i.n(n),i=i(8119);function a(c,s,t,e,n,i){var l=e.parseEpochMilliseconds,d=i.gameNameMaxLength;return{formatAggregatedDisplayText:function(t,e,i){return 0===i?n.gameUpdates.formatDisplayTextDouble(t,e):n.gameUpdates.formatDisplayTextMultiple(t,e,i)},getGameUpdatesAsync:function(t,r,e){return c.multiGetGameUpdatesAsync(t,e?new Date(e.getTime()-6e4):null).then(function(t){var e,i,n,a,o;if(!t||0===t.length)return null;for(e=0;e<t.length;e++)i=t[e],n=l(i.createdOn),r.hasOwnProperty(i.universeId)?((o=r[i.universeId]).updateMessage=i.content,o.createdOn=n,o.createdOnKey=i.createdOnKey):r[i.universeId]={universeId:i.universeId,rootPlaceId:i.rootPlaceId,updateMessage:i.content,createdOn:n,createdOnKey:i.createdOnKey,gameName:i.universeName,truncatedGameName:(a=i.universeName,o=void 0,(o=a)&&a.length>d&&(o=a.substr(0,d-3)+"..."),o),isPlayable:null,gameIconUrl:null,gameLinkUrl:i.rootPlaceId?s.getAbsoluteUrl("/games/"+i.rootPlaceId+"?originatorType=GameUpdateNotification&originatorId="+n):null,gameLinkUrlForApp:i.rootPlaceId?"games/"+i.rootPlaceId+"?originatorType=GameUpdateNotification&originatorId="+n:null};return t})},fillGameDetails:function(n,t){var e,i,a=[],o=[];for(e in n)n.hasOwnProperty(e)&&(null===(i=n[e]).isPlayable&&a.push(i.rootPlaceId),null===i.gameIconUrl&&o.push(i.universeId));0!==a.length&&(c.multiGetPlaceDetailsAsync(a).then(function(t){if(t)return u().forEach(t,function(t,e){var i=n[t.universeId];i&&(i.isPlayable=t.isPlayable)}),t}),0<o.length&&c.multiGetGameIconsAsync(o).then(function(t){(t=t)&&u().forEach(t,function(t,e){e=n[e];e&&(e.gameIconUrl=t)})}))},aggregateGameUpdateNotifications:function(t,i){if(!t||0===t.length)return null;var n=null,a=null,o=null,r=0,c={},s={};return s.id=t[0].id,s.notificationSourceType=t[0].notificationSourceType,s.metadataCollection=[],u().forEach(t,function(t){var e;t.eventDate&&(e=l(t.eventDate),(!n||n<e)&&(n=e,o=t.eventDate),(!a||e<a)&&(a=e)),u().forEach(t.metadataCollection,function(t){i.hasOwnProperty(t.UniverseId)&&!c.hasOwnProperty(t.UniverseId)&&(s.metadataCollection.push(t),c[t.UniverseId]=!0)}),t.eventCount&&(r+=t.eventCount)}),s.eventDate=o,s.minEventDate=new Date(a),s.eventCount=Math.max(r,s.metadataCollection.length),0<s.metadataCollection.length?s:null},sortGameUpdatesByCreatedDate:function(e,i){if(!e)return null;var t=Object.keys(e).map(function(t){return e[t]});return t.sort(function(t,e){return i?t.createdOn-e.createdOn:e.createdOn-t.createdOn}),t}}}a.$inject=["gameUpdatesService","urlService","$log","notificationStreamUtility","layoutLibraryService","gameUpdatesConstants"],i.Z.factory("gameUpdatesUtility",a),e.default=a},5978:function(t,e,i){"use strict";i.r(e);i=i(8119);function n(t,e){var n=e;return{links:{profileLinkName:"goToProfilePage",profileLink:"/users/{id}/profile",friendRequestLinkName:"viewAllFriendRequests",friendRequestTabName:"Friends",friendRequestLink:"/users/friends#!/friend-requests",settingLinkName:"goToSettingPage",settingTabName:"Settings",settingLink:"/my/account#!/notifications",friendsTabName:"Friends",friendsLink:"/users/friends",inboxTabName:"Messages",inboxLink:"/my/messages/#!/inbox",inboxMessageDetailQuery:"?conversationId="},stringTemplates:{boldLink:"<a class='font-caption-header'>{username}</a>",userLink:"<a class='text-name small font-caption-header' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{username}</a>",boldDisplayNameLink:"<a class='font-caption-header'>{displayname}</a>",displayNameLink:"<span class='cursor-pointer text-name paired-name'><a class='element small text-emphasis' type='goToProfilePage' user_id='{userid}' href='{profilelink}'>{displayname}</a><span class='text-emphasis small connector'>@</span><span class='small element'>{username}</span></span>"},newFriendRequests:function(t){return n.get("Message.YouHaveNewFriendRequests",{numberOfRequests:t})},newFriends:function(t){return n.get("Message.YouHaveNewFriends",{numberOfFriends:t})},friendRequestAcceptedSingle:function(t){return n.get("Message.FriendRequestAcceptedSingle",{userOne:t})},friendRequestAcceptedDouble:function(t,e){return n.get("Message.FriendRequestAcceptedDouble",{userOne:t,userTwo:e})},friendRequestAcceptedMultiple:function(t,e,i){return n.get("Message.FriendRequestAcceptedMultiple",{userOne:t,userTwo:e,userMultipleCount:i})},friendRequestSentSingle:function(t){return n.get("Message.FriendRequestSentSingle",{userOne:t})},friendRequestSentDouble:function(t,e){return n.get("Message.FriendRequestSentDouble",{userOne:t,userTwo:e})},friendRequestSentMultiple:function(t,e,i){return n.get("Message.FriendRequestSentMultiple",{userOne:t,userTwo:e,userMultipleCount:i})},confirmAcceptedSingle:function(t){return n.get("Message.ConfirmAcceptedSingle",{userOne:t})},confirmAcceptedDouble:function(t,e){return n.get("Message.ConfirmAcceptedDouble",{userOne:t,userTwo:e})},confirmAcceptedMultiple:function(t,e,i){return n.get("Message.ConfirmAcceptedMultiple",{userOne:t,userTwo:e,userMultipleCount:i})},confirmSentSingle:function(t){return n.get("Message.ConfirmSentSingle",{userOne:t})},confirmSentDouble:function(t,e){return n.get("Message.ConfirmSentDouble",{userOne:t,userTwo:e})},confirmSentMultiple:function(t,e,i){return n.get("Message.ConfirmSentMultiple",{userOne:t,userTwo:e,userMultipleCount:i})},textTemplate:{newNotification:function(t){return n.get("Message.NumberofNewNotifications",{notificationCount:t})},noNetworkConnectionText:function(){return n.get("Label.NoNetworkConnectionText")}},friendRequestActionType:{acceptIgnoreBtns:"AcceptIgnoreBtns",chatBtn:"chatBtn",viewAllBtn:"ViewAllBtn"},directiveTemplatesName:{notificationIndicatorTemplate:"notification-indicator",notificationStreamIndicatorTemplate:"notification-stream-indicator",notificationContentTemplate:"notification-content",friendRequestReceivedTemplate:"friend-request-received",friendRequestAcceptedTemplate:"friend-request-accepted",friendRequestTemplate:"friend-request",privateMessageTemplate:"private-message",developerMetricsAvailableTemplate:"developer-metrics-available",testTemplate:"test",notificationStreamBaseTemplate:"notification-stream-base",notificationStreamIconTemplate:"notification-stream-icon",notificationContentViewTemplate:"notification-content-view-template",gameUpdateTemplate:"game-update-template",gameUpdateActionPopoverTemplate:"game-update-action-popover-template",notificationStreamBaseViewTemplate:"notification-stream-base-view",notificationStreamContainerTemplate:"notification-stream-container"},notificationSourceType:{test:"Test",friendRequestReceived:"FriendRequestReceived",friendRequestAccepted:"FriendRequestAccepted",privateMessageReceived:"PrivateMessageReceived",developerMetricsAvailable:"DeveloperMetricsAvailable",gameUpdate:"GameUpdate"},gameUpdates:{formatDisplayTextDouble:function(t,e){return n.get("Message.AggregatedGameUpdateDouble",{gameOne:"<span class='font-caption-header'>"+t+"</span>",gameTwo:"<span class='font-caption-header'>"+e+"</span>"})},formatDisplayTextMultiple:function(t,e,i){return n.get("Message.AggregatedGameUpdateMultiple",{gameOne:"<span class='font-caption-header'>"+t+"</span>",gameTwo:"<span class='font-caption-header'>"+e+"</span>",otherCount:i})}}}}n.$inject=["$log","languageResource"],i.Z.factory("layoutLibraryService",n),e.default=n},9822:function(t,e,i){"use strict";i.r(e);var r=i(792),i=i(8119);function n(i,t,e){var n=r.EnvironmentUrls.notificationApi,a=r.EnvironmentUrls.chatApi,o=r.EnvironmentUrls.friendsApi;return{endpoints:{initializeData:{url:n+"/v2/stream-notifications/metadata",retryable:!0},unreadCount:{url:n+"/v2/stream-notifications/unread-count",retryable:!0,withCredentials:!0},getRecent:{url:n+"/v2/stream-notifications/get-recent",retryable:!0,withCredentials:!0},clearUnread:{url:n+"/v2/stream-notifications/clear-unread",retryable:!1,withCredentials:!0},markInteracted:{url:n+"/v2/stream-notifications/mark-interacted",retryable:!1,withCredentials:!0},updateNotificationSettings:{url:n+"/v2/notifications/update-notification-settings",retryable:!1,withCredentials:!0},getChatPrivacySettings:{url:a+"/v2/chat-settings",retryable:!1,withCredentials:!0}},initialize:function(){return i.httpGet(this.endpoints.initializeData,{})},getChatPrivacySettings:function(){return i.httpGet(this.endpoints.getChatPrivacySettings,{})},unreadCount:function(){return i.httpGet(this.endpoints.unreadCount,{})},clearUnread:function(){return i.httpPost(this.endpoints.clearUnread,{})},getRecentNotifications:function(t,e){e={startIndex:t,maxRows:e};return i.httpGet(this.endpoints.getRecent,e)},markInteracted:function(t){t={eventId:t};return i.httpPost(this.endpoints.markInteracted,t)},acceptFriendV2:function(t){t={url:o+"/v1/users/"+t+"/accept-friend-request",withCredentials:!0};return i.httpPost(t)},ignoreFriendV2:function(t){t={url:o+"/v1/users/"+t+"/decline-friend-request",withCredentials:!0};return i.httpPost(t)},updateNotificationSettings:function(t,e){t={notificationSourceType:t,receiverDestinationType:"NotificationStream",isEnabled:e},e=[];return e.push(t),i.httpPost(this.endpoints.updateNotificationSettings,e)}}}n.$inject=["httpService","$log","urlService"],i.Z.factory("notificationStreamService",n),e.default=n},167:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return a}});var c=i(792),s=HeaderScripts,e=i(5734),l=i.n(e),i=i(8119);function n(t,a,e){var o=a.notificationSourceType,i=a.links,r=a.stringTemplates;function n(t){if(!t)return null;if(t.getTime)return t.getTime();if("string"!=typeof t)return null;var e=/Date\((\d+)\)/.exec(t);return e?parseInt(e[1]):new Date(t).getTime()||null}return{templates:a.directiveTemplatesName,links:i,textTemplate:a.textTemplate,stringTemplates:r,layout:{pageDataInitialized:!1,firstTimeNotificationStream:!1,getRecentDataInitialized:!1,isNotificationContentOpen:!1,isLazyLoadingRequested:!1,isGetRecentDataLoadedRequested:!0,notificationsScrollbarSelector:"#notification-stream-scrollbar",settingLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.settingLink):i.settingLink,friendRequestLink:c.Endpoints?c.Endpoints.getAbsoluteUrl(i.friendRequestLink):i.friendRequestLink,bannerEnabled:!1,emptyNotificationEnabled:!1,notificationsLazyLoadingEnabled:!1,isNotificationsLoading:!1,isStreamBodyInteracted:!1,isDisplayNamesEnabled:c.DisplayNames&&c.DisplayNames.Enabled(),bannerText:"",errorText:"",dataBindSelector:"#notification-stream",dataContainerSelector:"#notification-stream-container"},notificationApiParams:{startIndexOfNotifications:0,pageSizeOfNotifications:10,loadMoreNotifications:!1},library:{unreadNotifications:0,userIdList:[],userLibrary:{},prefixLocalStoragekey:"user_",inApp:!!c.DeviceMeta&&(0,c.DeviceMeta)().isInApp,isPhone:!!c.DeviceMeta&&(0,c.DeviceMeta)().isPhone,isTouch:!!c.DeviceFeatureDetection&&c.DeviceFeatureDetection.isTouch,eventStreamMetaData:{},gameUpdateModels:{},notificationContentViews:{main:"main",gameUpdates:"gameUpdates"},canLaunchGameFromGameUpdate:!1,currentUserId:s.authenticatedUser.id},notificationsName:t.notifications,notificationSourceType:o,signalRType:t.types,friendRequestReceivedLayout:a.friendRequestReceivedLayout,friendRequestAcceptedLayout:a.friendRequestAcceptedLayout,friendRequestActionType:a.friendRequestActionType,getAbsoluteUrl:function(t,e){return c.Endpoints?c.Endpoints.generateAbsoluteUrl(t,e,!0):getFormatString(t,e)},getFormatString:function(t,e){for(var i in e){var n=e[i],a=new RegExp("{".concat(i.toLowerCase(),"(:.*?)?\\??}"));t=t.replace(a,n)}return t},isNotificationTypeValid:function(t){var e,i=!1;for(e in o)if(o[e]===t){i=!0;break}return i},isCardClickable:function(t){switch(t.notificationSourceType){case o.friendRequestAccepted:return 1<t.eventCount||1===t.eventCount&&0===t.metadataCollection.length;case o.privateMessageReceived:case o.developerMetricsAvailable:return!0}return!1},normalizeUser:function(t,e){var i={userId:null,userName:null,displayName:null};switch(t){case o.friendRequestReceived:i.userId=e.SenderUserId,i.userName=e.SenderUserName,i.displayName=e.SenderDisplayName;break;case o.friendRequestAccepted:i.userId=e.AccepterUserId,i.userName=e.AccepterUserName,i.displayName=e.AccepterDisplayName;break;case o.privateMessageReceived:i.userId=e.AuthorUserId,i.userName=e.AuthorUserName,i.displayName=e.AuthorDisplayName;break;case o.developerMetricsAvailable:case o.test:}return i},getUserHtmlTemplate:function(t,e){var i="",n=c.DisplayNames&&c.DisplayNames.Enabled();switch(t){case o.friendRequestAccepted:i=1<e?n?r.boldDisplayNameLink:r.boldLink:n?r.displayNameLink:r.userLink;break;case o.friendRequestReceived:default:i=n?r.displayNameLink:r.userLink}return i},normalizeYouHaveText:function(t,e){switch(t){case o.friendRequestReceived:return a.newFriendRequests(e);case o.friendRequestAccepted:return a.newFriends(e)}return{}},normalizeSingleDisplayText:function(t,e){switch(t){case o.friendRequestReceived:return a.friendRequestSentSingle(e);case o.friendRequestAccepted:return a.friendRequestAcceptedSingle(e)}return{}},normalizeSingleConfirmedText:function(t,e){switch(t){case o.friendRequestReceived:return a.confirmSentSingle(e);case o.friendRequestAccepted:return a.confirmAcceptedSingle(e)}return{}},normalizeDoubleDisplayText:function(t,e,i){switch(t){case o.friendRequestReceived:return a.friendRequestSentDouble(e,i);case o.friendRequestAccepted:return a.friendRequestAcceptedDouble(e,i)}return{}},normalizeDoubleConfirmedText:function(t,e,i){switch(t){case o.friendRequestReceived:return a.confirmSentDouble(e,i);case o.friendRequestAccepted:return a.confirmAcceptedDouble(e,i)}return{}},normalizeMultipleDisplayText:function(t,e,i,n){switch(t){case o.friendRequestReceived:return a.friendRequestSentMultiple(e,i,n);case o.friendRequestAccepted:return a.friendRequestAcceptedMultiple(e,i,n)}return{}},normalizeMultipleConfirmedText:function(t,e,i,n){switch(t){case o.friendRequestReceived:return a.confirmSentMultiple(e,i,n);case o.friendRequestAccepted:return a.confirmAcceptedMultiple(e,i,n)}return{}},buildScrollbar:function(t){l().element(t).mCustomScrollbar({autoHideScrollbar:!1,autoExpandScrollbar:!1,contentTouchScroll:1e4,documentTouchScroll:!1,mouseWheel:{preventDefault:!0},advanced:{autoScrollOnFocus:!1}})},isGameUpdateNotification:function(t){return t===o.gameUpdate},parseEpochMilliseconds:n,sortNotificationsByEventDate:function(e,i){if(!e)return null;var t=Object.keys(e).map(function(t){return e[t]});return t.sort(function(t,e){t=n(t.eventDate)||0,e=n(e.eventDate)||0;return i?t-e:e-t}),t}}}n.$inject=["signalR","layoutLibraryService","$log"],i.Z.factory("notificationStreamUtility",n);var a=n},5198:function(t){t.exports='<a id="nav-ns-icon" class="roblox-popover rbx-menu-item notification-stream-icon" data-bind="notification-stream-base" data-container="notification-stream-container"> <span class="icon-nav-notification-stream" id="nav-notifications"></span> <span class="notification-red notification" ng-show="layout.unreadNotifications > 0 && (!layout.isNotificationContentOpen)"> {{layout.unreadNotifications | abbreivateCount}} </span> </a>'},3004:function(t){t.exports='<div class="notification-stream" ng-class="{\'inApp\': library.inApp}"> <div notification-indicator></div> </div>'},3531:function(t){t.exports='<div class="notification-stream-indicator" ng-class="{\'inApp\': library.inApp}"> <a id="nav-ns-icon" class="rbx-menu-item notification-stream-icon"> <span class="icon-nav-notification-stream" id="nav-notifications"></span> <span class="notification-red notification" ng-show="layout.unreadNotifications > 0 && (!layout.isNotificationContentOpen)"> {{layout.unreadNotifications | abbreivateCount}} </span> </a> </div>'},177:function(t){t.exports='<div class="developer-metrics-notification-container"> <div class="notification-image-container"> <div class="card-plain" title="{{developerMetricsAvailableLayout.gameName}}"> <a class="text-name font-caption-header" ng-href="{{developerMetricsAvailableLayout.gameLinkUrl}}"> <img ng-src="{{developerMetricsAvailableLayout.gameIconUrl}}" class="game-icon placeholder-asset-icon"/> </a> </div> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="small text notification-display-text"> <div class="small text message-header" ng-bind-html="\'Message.DeveloperMetricsAvailable\' | translate:developerMetricsAvailableLayout"> </div> </span> <div class="text-secondary text-date-hint"> {{notification.eventDate | datetime: \'full\'}} </div> </div> <div class="notification-action-container"> <button class="view-button btn-primary-xs see-all-link" ng-click="viewButtonHandler()" ng-bind="\'Action.View\' | translate"></button> </div> </div> </div>'},6610:function(t){t.exports='<div> <div class="notification-item-front"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <a ng-href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="userIds[0]" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="small text notification-display-text" click-in-card ng-hide="notification.metadataCollection[0].IsAccepted" ng-bind-html="notificationDisplayText"></span> <span class="small text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-secondary font-caption-body" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> <div class="notification-action-container"> <button class="btn-secondary-xs see-all-link font-caption-header" id="accept-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="acceptFriend({targetUserId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Accept\' | translate"></button> <button class="btn-control-xs see-all-link font-caption-header" id="ignore-fr-btn" ng-show="notification.friendRequestActionType === friendRequestActionType.acceptIgnoreBtns" ng-click="ignoreFriend({targetUserId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Ignore\' | translate"></button> <button class="btn-secondary-xs roblox-popover-close see-all-link font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone}" ng-show="notification.friendRequestActionType === friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})" ng-bind="\'Action.Chat\' | translate"></button> <a class="btn-secondary-xs see-all-link font-caption-header" id="view-all-btn" ng-class="{\'btn-full-width\': library.isPhone }" ng-show="notification.friendRequestActionType === friendRequestActionType.viewAllBtn" click-in-card type="viewAllFriendRequests" ng-href="{{friendRequestLink}}" ng-bind="\'Action.ViewAll\' | translate"></a> </div> </div> </div> <div class="notification-item-back"> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="userIds.length >= 1" title="{{library.userLibrary[userIds[0]].name}}"> <a ng-href="{{library.userLibrary[userIds[0]].profileLink}}" type="goToProfilePage" user_id="{{userIds[0]}}" click-in-card> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="userIds[0]" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group notification-image-placeholder" ng-if="!userIds || userIds.length == 0"></span> </div> <div class="notification-item-content"> <div class="notification-data-container font-caption-body"> <span class="text notification-display-text" click-in-card ng-show="notification.metadataCollection[0].IsAccepted" ng-bind-html="requestConfirmedText"></span> <div class="text-secondary font-caption-body" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> <div class="notification-action-container" ng-show="notification.notificationSourceType == notificationSourceType.friendRequestReceived"> <button class="btn-secondary-xs see-all-link font-caption-header" id="chat-btn" ng-class="{\'btn-full-width\': library.isPhone}" ng-show="notification.friendRequestActionType == friendRequestActionType.chatBtn && !library.isChatDisabledByPrivacySetting" ng-click="chat({friendId: userIds[0], notificationId: notification.id, event: $event})"> <span ng-bind="\'Action.Chat\' | translate"></span> </button> </div> </div> </div> </div>'},4970:function(t){t.exports='<div> <ul class="dropdown-menu" role="menu"> <li> <a class="unfollow-link" ng-click="unfollowGame($event)"><span class="action-icon icon-follow-game-gray"></span><span ng-bind="\'Action.UnfollowGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span></a> </li> <li> <a class="report-abuse-link" ng-click="reportAbuse()"><span class="action-icon icon-report-darkgray"></span><span ng-bind="\'Action.ReportAbuse\' | translate"></span></a> </li> <li class="li-cancel-link"> <a class="cancel-link" ng-click="closeActionMenu()"><span class="action-icon icon-close"></span><span ng-bind="\'Action.Cancel\' | translate"></span></a> </li> </ul> </div>'},5931:function(t){t.exports='<div class="game-update-notification-container" ng-class="{ \'active\':isActionMenuOpen }"> <div class="notification-image-container" ng-show="isAggregated || !gameUpdateModel.isUnfollowed"> <div class="card-plain" title="{{gameUpdateModel.gameName}}"> <a ng-click="goToGameDetails()"> <img ng-src="{{gameUpdateModel.gameIconUrl}}" class="game-icon placeholder-asset-icon"/> </a> </div> </div> <div class="notification-item-content" ng-show="!isAggregated && !gameUpdateModel.isUnfollowed"> <a class="more-link" uib-popover-template="actionMenuTemplate" popover-trigger="\'outsideClick\'" popover-placement="bottom-right" popover-is-open="isActionMenuOpen" popover-append-to-body="true" popover-class="game-update-action-menu" popover-animation="false"> <span class="icon-more-gray-vertical"></span> </a> <div class="notification-data-container" ng-class="{ \'single-game-update\': !isAggregated, \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span class="small text notification-display-text"> <a class="text-name font-caption-header" ng-click="goToGameDetails()"> {{gameUpdateModel.truncatedGameName}} </a> : {{gameUpdateModel.updateMessage}} </span> <span class="spinner spinner-sm" ng-if="!gameUpdateModel.updateMessage"></span> <div class="text-secondary text-date-hint"> {{gameUpdateModel.createdOn | datetime: \'full\'}} </div> <div class="font-caption-body not-playable-message" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable === false"> <span ng-bind="\'Message.GameNotPlayableOnDevice\' | translate"></span> </div> <div class="notification-action-container" ng-if="library.canLaunchGameFromGameUpdate && gameUpdateModel.isPlayable"> <button class="play-button btn-growth-xs see-all-link font-caption-header" ng-click="playButtonHandler()" ng-bind="\'Action.Play\' | translate"></button> </div> </div> </div> <div class="notification-item-content aggregated" ng-show="isAggregated" ng-click="viewGameUpdates()"> <div class="notification-data-container"> <span class="small text notification-display-text" ng-bind-html="aggregatedDisplayText"></span> <div class="text-secondary text-date-hint"> {{gameUpdateModel.createdOn | datetime: \'full\'}} </div> <span class="icon-right"></span> </div> </div> <div ng-show="!isAggregated && gameUpdateModel.isUnfollowed"> <div class="unfollowed-game-update-notification small text" ng-class="{ \'play-button-visible\':library.canLaunchGameFromGameUpdate }"> <span ng-bind="\'Message.UnfollowedGame\' | translate:{gameName: gameUpdateModel.truncatedGameName}"></span><a class="undo-unfollow-link text-link small" ng-click="followGame()" ng-bind="\'Action.Undo\' | translate"></a> </div> </div> </div> '},2008:function(t){t.exports=' <div class="notification-stream-content" id="notification-stream-content" ng-cloak> <div ng-controller="notificationsController" id="notification-stream-container" class="roblox-popover-container notification-stream-wrap" ng-class="{\'open\': layout.isNotificationContentOpen}"> <div class="arrow"></div> <div class="popover-container notification-stream-container"> <div notification-content-view library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.main}}" is-active="true"> <div class="notification-stream-header" ng-hide="library.isPhone || library.iniOSApp"> <span class="text-label font-caption-header" ng-bind="\'Label.Notifications\' | translate"></span> <a class="text-link font-caption-header" click-in-card type="goToSettingPage" ng-href="{{layout.settingLink}}" ng-bind="\'Label.Settings\' | translate"></a> </div> <div id="notification-stream-body" class="notification-stream-body" notification-stream-body ng-class="{\'notification-stream-body-height\' : layout.getRecentDataInitialized && notificationIds.length == 0 }"> <div class="small notification-stream-banner banner-new" ng-class="{\'on\': layout.isNotificationContentOpen && layout.bannerEnabled}"> <span class="banner-text" ng-click="reloadNotificationStreamData()">{{layout.bannerText}}</span> <span id="close" class="icon-close-white" ng-click="closeBanner()"></span> </div> <div class="small notification-stream-banner banner-error" ng-class="{\'on\': layout.isNotificationContentOpen && layout.errorBannerEnabled}"> <span class="banner-text">{{layout.errorText}}</span> <span id="close" class="icon-close-white" ng-click="closeErrorBanner()"></span> </div> <div ng-show="layout.getRecentDataInitialized && notificationIds.length > 0" class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar" lazy-loading> <ul class="notification-stream-list"> <li ng-repeat="notification in notifications | sortNotificationsByEventDateDesc" notification-card class="border-bottom notification-stream-item" id="notification-stream-{{notification.id}}" ng-class="{\'unInteracted\': !notification.isInteracted,\'slide-out-left\': notification.isSlideOut,\'turn-off\': notification.isTurnOff,\'clickable\': notification.isClickable,\'game-update\': notification.notificationSourceType == notificationSourceType.gameUpdate }"> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestReceived" friend-request notification="notification" library="library" app-meta="appMeta" accept-friend="acceptFriend(targetUserId, notificationId, event)" ignore-friend="ignoreFriend(targetUserId, notificationId, event)" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" class="notification-item" ng-hide="notification.isTurnOff" ng-class="{\'flipped\': notification.isFlipped}"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestAccepted" friend-request notification="notification" library="library" app-meta="appMeta" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" ng-hide="notification.isTurnOff" class="notification-item" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.test" test notification="notification" interact-notification="interactNotification(notification)" class="notification-item"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.privateMessageReceived" private-message notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.developerMetricsAvailable" developer-metrics-available notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"> </div> <div ng-if="notification.notificationSourceType == notificationSourceType.gameUpdate" game-update notification="notification" library="library" content-view-manager="contentViewManager" app-meta="appMeta" class="notification-item" ng-hide="notification.isTurnOff" ng-click="null"> </div> <div class="small turn-off-container" ng-hide="!notification.isTurnOff"> <span class="turn-off-text">You have turned off notifications for</span> <a class="text-link small" ng-click="updateNotificationSetting(true)">Undo</a> </div> <span class="hidden icon-turn-off" ng-click="updateNotificationSetting(false)"></span> </li> </ul> <div class="notifications-lazy-loading" ng-show="layout.notiticationsLazyLoadingEnabled"> <span class="loading"></span> </div> </div> </div> <div class="notification-stream-loading" ng-hide="layout.getRecentDataInitialized"> <span class="loading"></span> </div> <div class="container-empty" ng-show="layout.getRecentDataInitialized && notificationIds.length === 0 "> <div class="notification-stream-empty"></div> <div><span class="text" ng-bind="\'Label.NoNotifications\' | translate"></span></div> </div> </div> </div> <div notification-content-view class="game-updates" library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.gameUpdates}}" is-active="false"> <div class="notification-stream-header"> <a class="back-icon icon-left" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)"></a> <span class="text-label small text game-updates-header" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)" ng-bind="\'Heading.BackToAllNotifications\' | translate"> </span> </div> <div id="notification-stream-body" class="notification-stream-body game-updates"> <div class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar"> <ul class="notification-stream-list"> <li ng-repeat="gameUpdateModel in library.gameUpdateModels | sortGameUpdates" class="border-bottom notification-stream-item unInteracted game-update"> <div game-update game-update-model="gameUpdateModel" library="library" app-meta="appMeta" class="notification-item" ng-click="null"> </div> </li> </ul> </div> </div> </div> </div> </div> </div> </div>'},6763:function(t){t.exports='<div class="notification-content-view" ng-show="isActive" ng-transclude></div>'},643:function(t){t.exports='<div ng-controller="notificationStreamController" id="notification-stream-base-view" ng-class="{\'inApp\': library.inApp,\'isPhone\': library.isPhone}"> <div notification-stream-container></div> </div>'},5091:function(t){t.exports='<div class="notification-stream-content" id="notification-stream-container" ng-cloak> <div ng-controller="notificationsController" class="notification-stream-wrap open"> <div class="notification-stream-container"> <div notification-content-view library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.main}}" is-active="true"> <div class="notification-stream-header" ng-hide="library.isPhone || library.iniOSApp"> <span class="text-label font-caption-header" ng-bind="\'Label.Notifications\' | translate"></span> <a class="text-link font-caption-header" click-in-card type="goToSettingPage" ng-href="{{layout.settingLink}}" ng-bind="\'Label.Settings\' | translate"></a> </div> <div id="notification-stream-body" class="notification-stream-body" notification-stream-body ng-class="{\'notification-stream-body-height\' : layout.getRecentDataInitialized && notificationIds.length == 0 }"> <div class="small notification-stream-banner banner-new" ng-class="{\'on\': layout.isNotificationContentOpen && layout.bannerEnabled}"> <span class="banner-text" ng-click="reloadNotificationStreamData()">{{layout.bannerText}}</span> <span id="close" class="icon-close-white" ng-click="closeBanner()"></span> </div> <div class="small notification-stream-banner banner-error" ng-class="{\'on\': layout.isNotificationContentOpen && layout.errorBannerEnabled}"> <span class="banner-text">{{layout.errorText}}</span> <span id="close" class="icon-close-white" ng-click="closeErrorBanner()"></span> </div> <div ng-show="layout.getRecentDataInitialized && notificationIds.length > 0" class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar" lazy-loading> <ul class="notification-stream-list"> <li ng-repeat="notification in notifications | sortNotificationsByEventDateDesc" notification-card class="border-bottom notification-stream-item" id="notification-stream-{{notification.id}}" ng-class="{\'unInteracted\': !notification.isInteracted,\'slide-out-left\': notification.isSlideOut,\'turn-off\': notification.isTurnOff,\'clickable\': notification.isClickable,\'game-update\': notification.notificationSourceType == notificationSourceType.gameUpdate }"> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestReceived" friend-request notification="notification" library="library" app-meta="appMeta" accept-friend="acceptFriend(targetUserId, notificationId, event)" ignore-friend="ignoreFriend(targetUserId, notificationId, event)" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" class="notification-item" ng-hide="notification.isTurnOff" ng-class="{\'flipped\': notification.isFlipped}"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.friendRequestAccepted" friend-request notification="notification" library="library" app-meta="appMeta" chat="chat(friendId, notificationId, event)" interact-notification="interactNotification(notification)" ng-hide="notification.isTurnOff" class="notification-item" ng-click="notification.isClickable ?  clickCard(notification) : null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.test" test notification="notification" interact-notification="interactNotification(notification)" class="notification-item"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.privateMessageReceived" private-message notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.developerMetricsAvailable" developer-metrics-available notification="notification" interact-notification="interactNotification(notification)" app-meta="appMeta" library="library" class="notification-item notification-stream-pm" ng-click="notification.isClickable ?  clickCard(notification) : null"></div> <div ng-if="notification.notificationSourceType == notificationSourceType.gameUpdate" game-update notification="notification" library="library" content-view-manager="contentViewManager" app-meta="appMeta" class="notification-item" ng-hide="notification.isTurnOff" ng-click="null"></div> <div class="small turn-off-container" ng-hide="!notification.isTurnOff"> <span class="turn-off-text">You have turned off notifications for</span> <a class="text-link small" ng-click="updateNotificationSetting(true)">Undo</a> </div> <span class="hidden icon-turn-off" ng-click="updateNotificationSetting(false)"></span> </li> </ul> <div class="notifications-lazy-loading" ng-show="layout.notiticationsLazyLoadingEnabled"> <span class="spinner spinner-sm"></span> </div> </div> </div> <div class="notification-stream-loading" ng-hide="layout.getRecentDataInitialized"> <span class="spinner spinner-sm"></span> </div> <div class="container-empty" ng-show="layout.getRecentDataInitialized && notificationIds.length === 0 "> <div class="notification-stream-empty"></div> <div><span class="text" ng-bind="\'Label.NoNotifications\' | translate"></span></div> </div> </div> </div> <div notification-content-view class="game-updates" library="library" content-view-manager="contentViewManager" view-id="{{library.notificationContentViews.gameUpdates}}" is-active="false"> <div class="notification-stream-header"> <a class="back-icon icon-left" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)"></a> <span class="text-label small text game-updates-header" ng-click="contentViewManager.selectContentView(library.notificationContentViews.main)" ng-bind="\'Heading.BackToAllNotifications\' | translate"> </span> </div> <div id="notification-stream-body" class="notification-stream-body game-updates"> <div class="notification-stream-data"> <div id="notification-stream-scrollbar" class="rbx-scrollbar notification-stream-scrollbar"> <ul class="notification-stream-list"> <li ng-repeat="gameUpdateModel in library.gameUpdateModels | sortGameUpdates" class="border-bottom notification-stream-item unInteracted game-update"> <div game-update game-update-model="gameUpdateModel" library="library" app-meta="appMeta" class="notification-item" ng-click="null"></div> </li> </ul> </div> </div> </div> </div> </div> </div> </div> '},9488:function(t){t.exports='<div> <div class="notification-image-container"> <div class="avatar avatar-headshot-sm card-plain" ng-if="privateMessageLayout.displayUserId !== null" title="{{privateMessageLayout.displayUserName}}"> <a ng-href="{{library.userLibrary[privateMessageLayout.displayUserId].profileLink}}" type="goToProfilePage" user_id="{{privateMessageLayout.displayUserId}}" click-in-card> <thumbnail-2d class="avatar-card-image" thumbnail-target-id="privateMessageLayout.displayUserId" thumbnail-type="thumbnailTypes.avatarHeadshot"> </thumbnail-2d> </a> </div> <span class="icon-nav-group" ng-if="privateMessageLayout.displayUserId === null"></span> </div> <div class="notification-item-content"> <div class="notification-data-container"> <span class="font-caption-body text notification-display-text" ng-show="!privateMessageLayout.isStacked"> <div class="font-caption-body text message-header" ng-bind-html="\'Message.MessageFrom\' | translate:{username: \'<span class=font-caption-header>\' + privateMessageLayout.displayUserName + \'</span>\'}"></div> <div class="text-secondary message-preview" ng-bind="privateMessageLayout.messagePreview"></div> </span> <div class="font-caption-body text notification-display-text" ng-show="privateMessageLayout.isStacked" ng-bind-html="\'Message.YouReceivedMessages\' | translate:{numberOfMessagesText: \'<span class=font-caption-header>\' + notification.eventCount + \'</span>\', numberOfMessages: notification.eventCount}"></div> <div class="text-date-hint" ng-bind="notification.eventDate | datetime: \'full\'"></div> </div> </div> </div> '},5980:function(t){t.exports='<div> <div class="notification-item-test"> <div class="notification-item-content"> <div class="notification-data-container"> <span class="text notification-display-text">{{notificationDisplayText}}</span> <div class="text-date-hint">{{notification.eventDate | datetime: \'full\'}}</div> </div> </div> </div> </div>'},2404:function(){},792:function(t){"use strict";t.exports=Roblox},5734:function(t){"use strict";t.exports=angular}},n={};function o(t){if(n[t])return n[t].exports;var e=n[t]={exports:{}};return i[t](e,e.exports,o),e.exports}o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,{a:e}),e},o.d=function(t,e){for(var i in e)o.o(e,i)&&!o.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},function(){"use strict";var t=o(5734),e=o.n(t),i=o(726),t=o(2404),n=o(8923),a=o(8119);(0,i.importFilesUnderPath)(o(965)),(0,i.importFilesUnderPath)(o(6408)),t=o(2594),(0,i.templateCacheGenerator)(e(),"notificationStreamIconHtmlTemplate",t),e().element(function(){e().bootstrap("#notification-stream-icon-container",[n.Z.name])}),(0,i.importFilesUnderPath)(o(8652)),(0,i.importFilesUnderPath)(o(3748)),(0,i.importFilesUnderPath)(o(3702)),(0,i.importFilesUnderPath)(o(4903)),(0,i.importFilesUnderPath)(o(3545)),t=o(6012),(0,i.templateCacheGenerator)(e(),"notificationStreamHtmlTemplate",t),e().element(function(){e().bootstrap(".notification-stream-base",[a.Z.name])}),n.Z,a.Z}()}();
//# sourceMappingURL=https://js.rbxcdn.com/f142db833f8d69e118b1-notificationStream.js.map

/* Bundle detector */
window.Roblox && window.Roblox.BundleDetector && window.Roblox.BundleDetector.bundleDetected("NotificationStream");